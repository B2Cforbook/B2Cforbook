package Servlet;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import BussinessLogical.Product;

/**
 * Servlet implementation class ProductServlet
 */
@WebServlet("/Product")
public class ProductServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProductServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

    
	
    /**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		doPost(req, res);
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		
		req.setCharacterEncoding("UTF-8");
		
		String action = req.getParameter("action");
		if (action != null && action.equals("list")){
			req.setAttribute("Products", this.list());
			req.getRequestDispatcher("/productList.jsp").forward(req, res);
		}
		
		if (action != null && action.equals("add")){
			JavaBean.Product item=this.getProduct(req);
			if(item!=null)
				try {
					new Product().add(item);
					req.getRequestDispatcher("/productList.jsp").forward(req, res);
				} catch (Exception e) {
					e.printStackTrace();
				}
			
		}
		//产品搜索
		if (action != null && action.equals("search")){
			String name = new String(req.getParameter("name").getBytes("ISO-8859-1"),"UTF-8");
			
				try {
					List<JavaBean.Product> items = new Product().findByKey(name);
					req.setAttribute("Products", this.search(name));
					req.getRequestDispatcher("catalog_grid.jsp").forward(req, res);
				} catch (Exception e) {
					e.printStackTrace();
				}
			
		}
		if (action != null && action.equals("look")){
			String name = new String(req.getParameter("name").getBytes("ISO-8859-1"),"UTF-8");
			
				try {
					List<JavaBean.Product> items = new Product().findBy(name);
					req.setAttribute("Products", this.look(name));
					req.getRequestDispatcher("catalog_grid.jsp").forward(req, res);
				} catch (Exception e) {
					e.printStackTrace();
				}
			
		}
		//产品编辑
		if (action != null && action.equals("edit")){
			try {
				int id = Integer.parseInt(req.getParameter("productId"));
				req.setAttribute("product", new Product().findById(id));
				req.getRequestDispatcher("/productEdit.jsp").forward(req, res);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		//产品删除
		if (action != null && action.equals("del")){
			int id = Integer.parseInt(req.getParameter("productId"));
			this.remove(id);
			req.getRequestDispatcher("Product?action=list").forward(req, res);
		}
		
		//编辑后保存
		if (action != null && action.equals("save")){
			this.save(this.getProduct(req));
			req.getRequestDispatcher("Product?action=list").forward(req, res);
		}
		
		if (action != null && action.equals("show")){
			int id = Integer.parseInt(req.getParameter("id"));
			req.setAttribute("product",this.show(id));
			req.getRequestDispatcher("product_page.jsp").forward(req, res);
		}
		
		
	}
	
	private JavaBean.Product getProduct(HttpServletRequest req){
    	String pId = req.getParameter("productId");
    	String pName = req.getParameter("productName");
    	String category = req.getParameter("category");
    	String categorys = req.getParameter("categorys");
    	String oldPrice = req.getParameter("oldprice");
    	String price = req.getParameter("Price");
    	String memo = req.getParameter("memo");
    	String stock = req.getParameter("stock");
    	String picture = req.getParameter("picture");
    	String discount = req.getParameter("discount");
    	
    	if (price == null || price.equals(""))
    		return null;
    	
    	JavaBean.Product item = new JavaBean.Product();
    	if (pId == null || pId.equals(""))
    		item.setProductId(0);
    	else
    		item.setProductId(Integer.parseInt(pId));

    	item.setProductName(pName);
    	item.setCategory(category);
    	item.setCategorys(categorys);
    	item.setOldPrice(Double.parseDouble(oldPrice));
    	item.setPrice(price);
    	item.setMemo(memo);
    	item.setStock(stock);
    	item.setPicture(picture);
    	item.setDiscount(discount);
    	return item;
    }
    private List<JavaBean.Product> list(){
    	Product svc = new Product();
		try {
			return svc.findAll();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
    }
    private List<JavaBean.Product> search(String name){
    	Product svc = new Product();
		try {
			return svc.findByKey(name);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
    }
    private List<JavaBean.Product> look(String name){
    	Product svc = new Product();
		try {
			return svc.findBy(name);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
    }
    private JavaBean.Product show(int id){
    	Product svc = new Product();
		try {
			return svc.findById(id);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
    }
	private void remove(int id){
		Product svc = new Product();
		try {
			svc.remove(id);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	private void save(JavaBean.Product item){
		try {
			new Product().save(item);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
